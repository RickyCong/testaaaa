void com.jd.lib.mylive.view.activity.a.a()
void com.jd.lib.mylive.view.activity.a$a.<init>(com.jd.lib.mylive.view.activity.a)
void com.jd.lib.mylive.view.widget.h0.f(long)
java.lang.String com.jd.lib.mylive.view.widget.JDFloatingOutItemView.i(com.jd.lib.mylive.view.widget.JDFloatingOutItemView)
void com.jd.lib.mylive.view.widget.JDFloatingOutItemView.j(com.jd.lib.mylive.view.widget.JDFloatingOutItemView, long)
void android.widget.TextView.setText(java.lang.CharSequence)
void com.jd.lib.mylive.view.widget.LiveSkinView.G(java.lang.String)
void com.jd.lib.mylive.view.widget.a3.f(java.lang.String)
int android.view.View.getVisibility()
void com.jd.lib.mylive.view.widget.LiveSkinView.I(int, java.lang.String, java.lang.String, java.lang.String)
void com.jd.lib.mylive.view.widget.LiveSkinView$f$a.onAnimationEnd(android.animation.Animator)
void com.jd.lib.mylive.view.widget.LiveSkinView.e(com.jd.lib.mylive.view.widget.LiveSkinView)
void com.jd.lib.mylive.view.widget.m1.<init>(com.jd.lib.mylive.view.widget.LiveSkinView)
void com.jd.lib.mylive.view.widget.m1.run()
com.jd.lib.mylive.view.widget.DanMuItemView com.jd.lib.mylive.view.widget.LiveSkinView.t(com.jd.lib.mylive.view.widget.LiveSkinView)
android.view.ViewParent android.view.View.getParent()
android.widget.RelativeLayout com.jd.lib.mylive.view.widget.LiveSkinView.d(com.jd.lib.mylive.view.widget.LiveSkinView)
void android.view.ViewGroup.removeView(android.view.View)
boolean com.jd.lib.mylive.view.widget.VerticalViewPager.dispatchTouchEvent(android.view.MotionEvent)
boolean android.view.ViewGroup.dispatchTouchEvent(android.view.MotionEvent)
boolean com.jd.lib.mylive.view.widget.LiveVerticalViewPager.onInterceptTouchEvent(android.view.MotionEvent)
boolean com.jd.lib.mylive.view.widget.VerticalViewPager.onInterceptTouchEvent(android.view.MotionEvent)
int android.view.MotionEvent.getAction()
float android.view.MotionEvent.getX()
float android.view.MotionEvent.getY()
int androidx.core.view.MotionEventCompat.getPointerId(android.view.MotionEvent, int)
int android.view.MotionEvent.getPointerId(int)
void com.jd.lib.mylive.view.widget.VerticalViewPager.h(boolean)
android.view.VelocityTracker android.view.VelocityTracker.obtain()
void android.view.VelocityTracker.addMovement(android.view.MotionEvent)
void android.view.VelocityTracker.recycle()
void com.jd.lib.mylive.view.widget.LiveSkinView.onClick(android.view.View)
void com.jd.lib.mylive.view.widget.LiveSkinView.g0()
void com.jd.lib.mylive.view.widget.LiveSkinView$d.<init>(com.jd.lib.mylive.view.widget.LiveSkinView)
void com.jd.lib.mylive.view.utils.f.h(java.lang.String, int, java.lang.String, com.jd.lib.mylive.view.utils.f$c)
void com.jd.lib.mylive.view.widget.LiveSkinView$d.a()
android.os.Handler com.jd.lib.mylive.view.widget.LiveSkinView.o(com.jd.lib.mylive.view.widget.LiveSkinView)
void com.jd.lib.mylive.view.widget.LiveSkinView$d$a.<init>(com.jd.lib.mylive.view.widget.LiveSkinView$d)
com.jd.lib.mylive.help.c1.a com.jd.lib.mylive.view.activity.VideoLiveRoomActivity.o()
void com.jd.lib.mylive.view.widget.LiveSkinView$d$a.run()
void com.jd.lib.mylive.view.widget.LiveSkinView.n(com.jd.lib.mylive.view.widget.LiveSkinView)
void com.jd.lib.mylive.view.widget.c1.<init>(com.jingdong.common.BaseActivity, com.jd.lib.mylive.view.widget.LiveSkinView, java.util.List)
android.view.LayoutInflater android.view.LayoutInflater.from(android.content.Context)
android.view.View android.view.LayoutInflater.inflate(int, android.view.ViewGroup)
java.lang.Object android.view.textclassifier.-$$Lambda$TextClassificationManager$oweIEhDWxy3_0kZSXp3oRbSuNW4.get()
java.lang.String android.view.textclassifier.TextClassificationManager.lambda$getSettings$2$TextClassificationManager()
void androidx.recyclerview.widget.RecyclerView.<init>(android.content.Context, android.util.AttributeSet)
void androidx.recyclerview.widget.RecyclerView.<init>(android.content.Context, android.util.AttributeSet, int)
void androidx.recyclerview.widget.RecyclerView$Recycler.<init>(androidx.recyclerview.widget.RecyclerView)
void androidx.recyclerview.widget.DefaultItemAnimator.<init>()
void androidx.recyclerview.widget.SimpleItemAnimator.<init>()
void androidx.recyclerview.widget.RecyclerView$ItemAnimator.<init>()
void androidx.recyclerview.widget.AdapterHelper.<init>(androidx.recyclerview.widget.AdapterHelper$Callback, boolean)
void androidx.recyclerview.widget.OpReorderer.<init>(androidx.recyclerview.widget.OpReorderer$Callback)
android.view.View android.view.View.findViewById(int)
void com.jd.lib.mylive.view.widget.d1.<init>(com.jd.lib.mylive.view.widget.c1)
void android.view.View.setOnTouchListener(android.view.View$OnTouchListener)
void android.view.View.setBackgroundColor(int)
void android.widget.TextView.setTextColor(int)
void com.jingdong.jdsdk.utils.FontsUtil.changeTextFont(android.widget.TextView)
void com.jingdong.jdsdk.utils.FontsUtil.changeTextFont(android.widget.TextView, int)
android.content.Context android.view.View.getContext()
void android.widget.TextView.setTypeface(android.graphics.Typeface)
void android.view.View.setBackgroundDrawable(android.graphics.drawable.Drawable)
void android.widget.TextView.setHintTextColor(int)
void android.widget.TextView.updateTextColors()
boolean android.view.View.requestFocus()
void com.jd.lib.mylive.view.adapter.RecommendCommentTipsAdapter.<init>(com.jingdong.common.BaseActivity, java.util.List)
void androidx.recyclerview.widget.RecyclerView$Adapter.<init>()
void androidx.recyclerview.widget.RecyclerView$AdapterDataObservable.<init>()
void androidx.recyclerview.widget.LinearLayoutManager.<init>(android.content.Context)
void androidx.recyclerview.widget.LinearLayoutManager.<init>(android.content.Context, int, boolean)
void androidx.recyclerview.widget.RecyclerView$LayoutManager.<init>()
void androidx.recyclerview.widget.RecyclerView$LayoutManager$1.<init>(androidx.recyclerview.widget.RecyclerView$LayoutManager)
void androidx.recyclerview.widget.RecyclerView$LayoutManager$2.<init>(androidx.recyclerview.widget.RecyclerView$LayoutManager)
void androidx.recyclerview.widget.ViewBoundsCheck.<init>(androidx.recyclerview.widget.ViewBoundsCheck$Callback)
void androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags.<init>()
void androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo.<init>()
void androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo.reset()
void androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult.<init>()
void androidx.recyclerview.widget.LinearLayoutManager.setOrientation(int)
void androidx.recyclerview.widget.LinearLayoutManager.assertNotInLayoutOrScroll(java.lang.String)
void androidx.recyclerview.widget.RecyclerView$LayoutManager.assertNotInLayoutOrScroll(java.lang.String)
androidx.recyclerview.widget.OrientationHelper androidx.recyclerview.widget.OrientationHelper.createOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager, int)
androidx.recyclerview.widget.OrientationHelper androidx.recyclerview.widget.OrientationHelper.createVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)
void androidx.recyclerview.widget.OrientationHelper$2.<init>(androidx.recyclerview.widget.RecyclerView$LayoutManager)
void androidx.recyclerview.widget.OrientationHelper.<init>(androidx.recyclerview.widget.RecyclerView$LayoutManager, androidx.recyclerview.widget.OrientationHelper$1)
void androidx.recyclerview.widget.OrientationHelper.<init>(androidx.recyclerview.widget.RecyclerView$LayoutManager)
void androidx.recyclerview.widget.RecyclerView$LayoutManager.requestLayout()
void androidx.recyclerview.widget.LinearLayoutManager.setReverseLayout(boolean)
androidx.recyclerview.widget.OrientationHelper androidx.recyclerview.widget.OrientationHelper.createHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager)
void androidx.recyclerview.widget.OrientationHelper$1.<init>(androidx.recyclerview.widget.RecyclerView$LayoutManager)
void androidx.recyclerview.widget.RecyclerView.setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
void androidx.recyclerview.widget.RecyclerView.stopScroll()
void androidx.recyclerview.widget.RecyclerView.setScrollState(int)
void androidx.recyclerview.widget.RecyclerView.stopScrollersInternal()
void androidx.recyclerview.widget.RecyclerView$ViewFlinger.stop()
boolean android.view.View.removeCallbacks(java.lang.Runnable)
void androidx.recyclerview.widget.RecyclerView$Recycler.clear()
void androidx.recyclerview.widget.RecyclerView$Recycler.recycleAndClearCachedViews()
void androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl.clearPrefetchPositions()
void androidx.recyclerview.widget.ChildHelper.removeAllViewsUnfiltered()
void androidx.recyclerview.widget.ChildHelper$Bucket.reset()
void androidx.recyclerview.widget.RecyclerView$5.removeAllViews()
int androidx.recyclerview.widget.RecyclerView$5.getChildCount()
void android.view.ViewGroup.removeAllViews()
void androidx.recyclerview.widget.RecyclerView$LayoutManager.setRecyclerView(androidx.recyclerview.widget.RecyclerView)
int android.view.View.getWidth()
int android.view.View.getHeight()
void androidx.recyclerview.widget.RecyclerView$Recycler.updateViewCacheSize()
void androidx.recyclerview.widget.RecyclerView.requestLayout()
void androidx.recyclerview.widget.RecyclerView.setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
void androidx.recyclerview.widget.RecyclerView.setLayoutFrozen(boolean)
void androidx.recyclerview.widget.RecyclerView.suppressLayout(boolean)
void androidx.recyclerview.widget.RecyclerView.setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter, boolean, boolean)
void androidx.recyclerview.widget.RecyclerView.removeAndRecycleViews()
void androidx.recyclerview.widget.DefaultItemAnimator.endAnimations()
boolean androidx.recyclerview.widget.DefaultItemAnimator.isRunning()
void androidx.recyclerview.widget.RecyclerView$LayoutManager.removeAndRecycleAllViews(androidx.recyclerview.widget.RecyclerView$Recycler)
int androidx.recyclerview.widget.RecyclerView$LayoutManager.getChildCount()
void androidx.recyclerview.widget.RecyclerView$LayoutManager.removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler)
void androidx.recyclerview.widget.AdapterHelper.reset()
void androidx.recyclerview.widget.AdapterHelper.recycleUpdateOpsAndClearList(java.util.List)
void androidx.recyclerview.widget.RecyclerView$Adapter.registerAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver)
void androidx.recyclerview.widget.RecyclerView$Adapter.onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView)
void androidx.recyclerview.widget.RecyclerView$LayoutManager.onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter, androidx.recyclerview.widget.RecyclerView$Adapter)
void androidx.recyclerview.widget.RecyclerView$Recycler.onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter, androidx.recyclerview.widget.RecyclerView$Adapter, boolean)
androidx.recyclerview.widget.RecyclerView$RecycledViewPool androidx.recyclerview.widget.RecyclerView$Recycler.getRecycledViewPool()
void androidx.recyclerview.widget.RecyclerView$RecycledViewPool.<init>()
void androidx.recyclerview.widget.RecyclerView$RecycledViewPool.onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter, androidx.recyclerview.widget.RecyclerView$Adapter, boolean)
void androidx.recyclerview.widget.RecyclerView$RecycledViewPool.clear()
void androidx.recyclerview.widget.RecyclerView$RecycledViewPool.attach()
void androidx.recyclerview.widget.RecyclerView.processDataSetCompletelyChanged(boolean)
void androidx.recyclerview.widget.RecyclerView.markKnownViewsInvalid()
int androidx.recyclerview.widget.ChildHelper.getUnfilteredChildCount()
void androidx.recyclerview.widget.RecyclerView.markItemDecorInsetsDirty()
void androidx.recyclerview.widget.RecyclerView$Recycler.markItemDecorInsetsDirty()
void androidx.recyclerview.widget.RecyclerView$Recycler.markKnownViewsInvalid()
boolean androidx.recyclerview.widget.RecyclerView$Adapter.hasStableIds()
void com.jd.lib.mylive.view.widget.f1.<init>(com.jd.lib.mylive.view.widget.c1)
void com.jd.lib.mylive.view.adapter.RecommendCommentTipsAdapter.e(com.jd.lib.mylive.view.adapter.RecommendCommentTipsAdapter$a)
void android.widget.PopupWindow.setContentView(android.view.View)
void com.jd.lib.mylive.view.widget.e1.<init>(com.jd.lib.mylive.view.widget.c1)
void android.widget.TextView.addTextChangedListener(android.text.TextWatcher)
android.view.animation.Animation android.view.animation.AnimationUtils.loadAnimation(android.content.Context, int)
void android.view.View.setAnimation(android.view.animation.Animation)
void com.jd.lib.mylive.view.widget.g1.<init>(com.jd.lib.mylive.view.widget.c1)
void com.jd.lib.mylive.view.widget.c1.f(int, com.jd.lib.mylive.model.entity.VideoPWGoodsEntity)
void android.widget.TextView.setHint(int)
void android.widget.TextView.setHint(java.lang.CharSequence)
void android.view.View.setVisibility(int)
void com.jd.lib.mylive.view.widget.c1$a.<init>(com.jd.lib.mylive.view.widget.c1, int, com.jd.lib.mylive.model.entity.VideoPWGoodsEntity)
void android.view.View.setOnClickListener(android.view.View$OnClickListener)
void android.widget.PopupWindow.showAtLocation(android.view.View, int, int, int)
android.view.View android.view.View.getRootView()
android.os.IBinder android.view.View.getWindowToken()
void android.transition.TransitionManager.endTransitions(android.view.ViewGroup)
android.view.View android.widget.PopupWindow.getAnchor()
android.view.WindowManager$LayoutParams android.widget.PopupWindow.createPopupLayoutParams(android.os.IBinder)
void android.view.WindowManager$LayoutParams.<init>()
void android.view.WindowManager$LayoutParams.setTitle(java.lang.CharSequence)
void android.widget.PopupWindow.preparePopup(android.view.WindowManager$LayoutParams)
android.widget.PopupWindow$PopupBackgroundView android.widget.PopupWindow.createBackgroundView(android.view.View)
android.view.ViewGroup$LayoutParams android.view.View.getLayoutParams()
void android.widget.PopupWindow$PopupBackgroundView.<init>(android.widget.PopupWindow, android.content.Context)
void android.view.ViewGroup.addView(android.view.View, android.view.ViewGroup$LayoutParams)
void android.view.View.setBackground(android.graphics.drawable.Drawable)
android.widget.PopupWindow$PopupDecorView android.widget.PopupWindow.createDecorView(android.view.View)
void android.widget.PopupWindow$PopupDecorView.<init>(android.widget.PopupWindow, android.content.Context)
void android.widget.PopupWindow$PopupDecorView$4.<init>(android.widget.PopupWindow$PopupDecorView)
void android.view.ViewGroup.addView(android.view.View, int, int)
void android.view.ViewGroup.setClipChildren(boolean)
void android.view.ViewGroup.setClipToPadding(boolean)
void android.view.View.setIsRootNamespace(boolean)
void android.view.View.setElevation(float)
void android.view.WindowManager$LayoutParams.setSurfaceInsets(android.view.View, boolean, boolean)
int android.view.View.getRawLayoutDirection()
void android.widget.PopupWindow.invokePopup(android.view.WindowManager$LayoutParams)
void android.view.View.setFitsSystemWindows(boolean)
void android.view.WindowManagerImpl.addView(android.view.View, android.view.ViewGroup$LayoutParams)
void android.view.InputWindowHandle.setTouchableRegionCrop(android.view.SurfaceControl)
android.os.IBinder android.view.SurfaceControl.getHandle()
int[] android.widget.PopupWindow$PopupBackgroundView.onCreateDrawableState(int)
int[] android.view.ViewGroup.onCreateDrawableState(int)
java.lang.Object android.widget.TextView.getServiceManagerForUser(java.lang.String, java.lang.Class)
void androidx.recyclerview.widget.RecyclerView.onAttachedToWindow()
void android.view.ViewGroup.onAttachedToWindow()
void androidx.recyclerview.widget.RecyclerView$LayoutManager.dispatchAttachedToWindow(androidx.recyclerview.widget.RecyclerView)
void androidx.recyclerview.widget.RecyclerView$LayoutManager.onAttachedToWindow(androidx.recyclerview.widget.RecyclerView)
void androidx.recyclerview.widget.GapWorker.add(androidx.recyclerview.widget.RecyclerView)
int com.jd.lib.mylive.view.adapter.RecommendCommentTipsAdapter.getItemCount()
void androidx.recyclerview.widget.LinearLayoutManager.updateLayoutStateToFillEnd(int, int)
int androidx.recyclerview.widget.OrientationHelper$1.getEndAfterPadding()
int androidx.recyclerview.widget.RecyclerView$LayoutManager.getWidth()
int androidx.recyclerview.widget.RecyclerView$LayoutManager.getPaddingRight()
androidx.recyclerview.widget.RecyclerView$ViewHolder com.jd.lib.mylive.view.adapter.RecommendCommentTipsAdapter.onCreateViewHolder(android.view.ViewGroup, int)
com.jd.lib.mylive.view.adapter.RecommendCommentTipsAdapter$RecommendTipsViewHolder com.jd.lib.mylive.view.adapter.RecommendCommentTipsAdapter.d()
void com.jd.lib.mylive.view.adapter.RecommendCommentTipsAdapter$RecommendTipsViewHolder.<init>(com.jd.lib.mylive.view.adapter.RecommendCommentTipsAdapter, android.view.View)
void androidx.recyclerview.widget.RecyclerView$ViewHolder.<init>(android.view.View)
com.jingdong.common.BaseActivity com.jd.lib.mylive.view.adapter.RecommendCommentTipsAdapter.c(com.jd.lib.mylive.view.adapter.RecommendCommentTipsAdapter)
void com.jd.lib.mylive.view.adapter.RecommendCommentTipsAdapter.onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder, int)
android.widget.TextView com.jd.lib.mylive.view.adapter.RecommendCommentTipsAdapter$RecommendTipsViewHolder.a(com.jd.lib.mylive.view.adapter.RecommendCommentTipsAdapter$RecommendTipsViewHolder)
void android.widget.TextView.setSelected(boolean)
void com.jd.lib.mylive.view.adapter.c.<init>(com.jd.lib.mylive.view.adapter.RecommendCommentTipsAdapter, java.lang.String, int)
android.view.ViewGroup$LayoutParams androidx.recyclerview.widget.RecyclerView.generateDefaultLayoutParams()
androidx.recyclerview.widget.RecyclerView$LayoutParams androidx.recyclerview.widget.LinearLayoutManager.generateDefaultLayoutParams()
void androidx.recyclerview.widget.RecyclerView$LayoutParams.<init>(int, int)
void android.view.ViewGroup$MarginLayoutParams.<init>(int, int)
void androidx.recyclerview.widget.LinearLayoutManager.updateLayoutStateToFillStart(int, int)
int androidx.recyclerview.widget.OrientationHelper$1.getStartAfterPadding()
int androidx.recyclerview.widget.LinearLayoutManager.fixLayoutStartGap(int, androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, boolean)
int androidx.recyclerview.widget.LinearLayoutManager.fixLayoutEndGap(int, androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, boolean)
int androidx.recyclerview.widget.OrientationHelper$1.getTotalSpace()
int androidx.recyclerview.widget.RecyclerView$LayoutManager.getPaddingLeft()
void android.view.autofill.AutofillManager.notifyViewEntered(android.view.View, int)
boolean android.view.autofill.AutofillManager.hasAutofillFeature()
android.view.autofill.AutofillManager$AutofillCallback android.view.autofill.AutofillManager.notifyViewEnteredLocked(android.view.View, int)
android.view.autofill.AutofillId android.view.View.getAutofillId()
int android.view.View.getAutofillViewId()
void android.view.autofill.AutofillId.<init>(int)
void android.view.autofill.AutofillId.<init>(int, int, long, int)
boolean android.view.autofill.AutofillManager.shouldIgnoreViewEnteredLocked(android.view.autofill.AutofillId, int)
boolean android.view.autofill.AutofillManager.isDisabledByServiceLocked()
boolean android.view.autofill.AutofillManager.isFinishedLocked()
void android.view.autofill.AutofillManager.ensureServiceClientAddedIfNeededLocked()
void android.view.autofill.IAutoFillManagerClient$Stub$Proxy.<init>(android.os.IBinder)
void androidx.recyclerview.widget.RecyclerView.onSizeChanged(int, int, int, int)
void android.view.View.onSizeChanged(int, int, int, int)
void androidx.recyclerview.widget.RecyclerView.invalidateGlows()
void android.view.-$$Lambda$ViewRootImpl$YBiqAhbCbXVPSKdbE3K4rH2gpxI.onFrameComplete(long)
void android.view.ViewRootImpl.lambda$performDraw$2$ViewRootImpl(android.os.Handler, java.util.ArrayList, long)
void android.view.-$$Lambda$ViewRootImpl$7A_3tkr_Kw4TZAeIUGVlOoTcZhg.<init>(android.view.ViewRootImpl, java.util.ArrayList)
void android.view.-$$Lambda$ViewRootImpl$7A_3tkr_Kw4TZAeIUGVlOoTcZhg.run()
void android.view.ViewRootImpl.lambda$performDraw$1$ViewRootImpl(java.util.ArrayList)
void android.view.ViewRootImpl.pendingDrawFinished()
void android.view.ViewRootImpl.reportDrawFinished()
com.jd.lib.mylive.view.widget.DanMuItemView com.jd.lib.mylive.view.widget.LiveSkinView.c(com.jd.lib.mylive.view.widget.LiveSkinView, com.jd.lib.mylive.model.entity.DanMuItemEntity)
void android.view.View.setPadding(int, int, int, int)
void com.jd.lib.mylive.view.widget.DanMuItemView.d(int, java.lang.String, java.lang.String, java.lang.String)
void android.widget.ImageView.setVisibility(int)
void com.jingdong.common.utils.JDImageUtils.displayImage(java.lang.String, android.widget.ImageView)
void com.jingdong.common.utils.JDImageUtils.displayImage(java.lang.String, android.widget.ImageView, com.jingdong.app.util.image.JDDisplayImageOptions, com.jingdong.app.util.image.listener.JDImageLoadingListener, com.jingdong.app.util.image.listener.JDImageLoadingProgressListener)
void com.jingdong.common.utils.JDImageUtils.displayImage(java.lang.String, android.widget.ImageView, com.jingdong.app.util.image.JDDisplayImageOptions, boolean, com.jingdong.app.util.image.listener.JDImageLoadingListener, com.jingdong.app.util.image.listener.JDImageLoadingProgressListener)
com.facebook.imagepipeline.common.ResizeOptions com.jd.mobile.image.utils.a.b(android.view.View)
boolean com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder.getDecodePreviewFrame()
boolean com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder.getUseLastFrameForPreview()
boolean com.facebook.imagepipeline.request.ImageRequestBuilder.isLocalThumbnailPreviewsEnabled()
com.facebook.drawee.interfaces.DraweeController com.jingdong.jdsdk.image.JDFrescoUtils.getDraweeController(com.facebook.imagepipeline.request.ImageRequest, com.facebook.drawee.view.SimpleDraweeView, com.facebook.drawee.controller.ControllerListener)
com.facebook.drawee.interfaces.DraweeController com.facebook.drawee.view.DraweeView.getController()
com.facebook.drawee.interfaces.DraweeController com.facebook.drawee.view.DraweeHolder.getController()
void android.view.View.setBackgroundResource(int)
int com.jd.lib.mylive.view.widget.DanMuItemView.c()
int android.view.ViewGroup.getChildMeasureSpec(int, int, int)
int android.view.View$MeasureSpec.makeMeasureSpec(int, int)
void android.view.View.measure(int, int)
int android.view.View.getMeasuredWidth()
void androidx.recyclerview.widget.RecyclerView.addFocusables(java.util.ArrayList, int, int)
boolean androidx.recyclerview.widget.RecyclerView$LayoutManager.onAddFocusables(androidx.recyclerview.widget.RecyclerView, java.util.ArrayList, int, int)
void android.view.ViewGroup.addFocusables(java.util.ArrayList, int, int)
void com.android.internal.view.InputBindResult.<init>(int, com.android.internal.view.IInputMethodSession, android.view.InputChannel, java.lang.String, int, android.graphics.Matrix)
android.view.inputmethod.InputConnection android.inputmethodservice.InputMethodService.getCurrentInputConnection()
boolean com.android.internal.view.InputConnectionWrapper.finishComposingText()
void com.android.internal.view.IInputContext$Stub$Proxy.finishComposingText()
void com.android.inputmethod.keyboard.internal.GestureFloatingTextDrawingPreview.dismissGestureFloatingPreviewText()
void com.android.inputmethod.keyboard.internal.GestureFloatingTextDrawingPreview.setSuggetedWords(com.android.inputmethod.latin.SuggestedWords)
boolean com.android.inputmethod.keyboard.internal.AbstractDrawingPreview.isPreviewEnabled()
void com.android.internal.view.IInputMethodSession$Stub$Proxy.updateCursorAnchorInfo(android.view.inputmethod.CursorAnchorInfo)
void android.view.inputmethod.CursorAnchorInfo.writeToParcel(android.os.Parcel, int)
java.lang.Object android.view.inputmethod.CursorAnchorInfo$1.createFromParcel(android.os.Parcel)
android.view.inputmethod.CursorAnchorInfo android.view.inputmethod.CursorAnchorInfo$1.createFromParcel(android.os.Parcel)
void android.view.inputmethod.CursorAnchorInfo.<init>(android.os.Parcel)
void android.inputmethodservice.IInputMethodSessionWrapper.updateCursorAnchorInfo(android.view.inputmethod.CursorAnchorInfo)
int androidx.recyclerview.widget.OrientationHelper$2.getEndAfterPadding()
int androidx.recyclerview.widget.OrientationHelper$2.getStartAfterPadding()
boolean com.android.inputmethod.latin.LatinIME.onEvaluateInputViewShown()
android.view.Window android.app.Dialog.getWindow()
void com.android.inputmethod.latin.utils.ViewLayoutUtils.updateLayoutHeightOf(android.view.Window, int)
android.view.WindowManager$LayoutParams android.view.Window.getAttributes()
void com.android.internal.policy.PhoneWindow.setAttributes(android.view.WindowManager$LayoutParams)
android.view.View android.view.Window.findViewById(int)
void com.android.inputmethod.latin.utils.ViewLayoutUtils.updateLayoutHeightOf(android.view.View, int)
void com.android.inputmethod.latin.utils.ViewLayoutUtils.updateLayoutGravityOf(android.view.View, int)
void com.android.inputmethod.latin.LatinIME.onStartInputView(android.view.inputmethod.EditorInfo, boolean)
void com.android.inputmethod.latin.LatinIME$UIHandler.onStartInputView(android.view.inputmethod.EditorInfo, boolean)
void com.android.inputmethod.latin.LatinIME$UIHandler.executePendingImsCallback(com.android.inputmethod.latin.LatinIME, android.view.inputmethod.EditorInfo, boolean)
void com.android.inputmethod.latin.LatinIME.onStartInputViewInternal(android.view.inputmethod.EditorInfo, boolean)
void android.inputmethodservice.InputMethodService.onStartInputView(android.view.inputmethod.EditorInfo, boolean)
android.view.inputmethod.InputMethodSubtype android.view.inputmethod.InputMethodManager.getCurrentInputMethodSubtype()
android.view.inputmethod.InputMethodSubtype com.android.internal.view.IInputMethodManager$Stub$Proxy.getCurrentInputMethodSubtype()
java.lang.Object android.view.inputmethod.InputMethodSubtype$1.createFromParcel(android.os.Parcel)
void com.jd.lib.mylive.view.widget.VerticalViewPager.drawableStateChanged()
void android.view.ViewGroup.drawableStateChanged()
android.graphics.drawable.Drawable android.view.View.getBackground()
void androidx.appcompat.widget.AppCompatTextView.drawableStateChanged()
void android.widget.TextView.drawableStateChanged()
int android.view.inputmethod.InputMethodInfo.hashCode()
void androidx.viewpager.widget.ViewPager.drawableStateChanged()
java.util.Map android.view.inputmethod.InputMethodManager.getShortcutInputMethodsAndSubtypes()
java.util.List android.view.inputmethod.InputMethodManager.getEnabledInputMethodList()
java.util.List android.view.inputmethod.InputMethodManager.getEnabledInputMethodSubtypeList(android.view.inputmethod.InputMethodInfo, boolean)
android.view.inputmethod.InputMethodSubtype android.view.inputmethod.InputMethodInfo.getSubtypeAt(int)
byte[] android.view.inputmethod.InputMethodSubtypeArray.decompress(byte[], int)
void android.view.inputmethod.InputMethodSubtypeArray.$closeResource(java.lang.Throwable, java.lang.AutoCloseable)
android.view.inputmethod.InputMethodSubtype[] android.view.inputmethod.InputMethodSubtypeArray.unmarshall(byte[])
java.lang.Object[] android.view.inputmethod.InputMethodSubtype$1.newArray(int)
android.view.inputmethod.InputMethodSubtype[] android.view.inputmethod.InputMethodSubtype$1.newArray(int)
java.lang.String android.view.inputmethod.InputMethodSubtype.getMode()
com.android.inputmethod.keyboard.MainKeyboardView com.android.inputmethod.keyboard.KeyboardSwitcher.getMainKeyboardView()
boolean com.android.inputmethod.latin.InputAttributes.inPrivateImeOptions(java.lang.String, java.lang.String, android.view.inputmethod.EditorInfo)
com.android.inputmethod.keyboard.Keyboard com.android.inputmethod.keyboard.KeyboardView.getKeyboard()
com.android.inputmethod.latin.touchinputconsumer.GestureConsumer com.android.inputmethod.latin.touchinputconsumer.GestureConsumer.newInstance(android.view.inputmethod.EditorInfo, com.android.inputmethod.latin.inputlogic.PrivateCommandPerformer, java.util.Locale, com.android.inputmethod.keyboard.Keyboard)
boolean android.view.accessibility.AccessibilityManager.isEnabled()
boolean com.android.inputmethod.latin.settings.SettingsValues.isSameInputType(android.view.inputmethod.EditorInfo)
boolean com.android.inputmethod.latin.InputAttributes.isSameInputType(android.view.inputmethod.EditorInfo)
android.view.inputmethod.InputMethodSubtype com.android.inputmethod.latin.RichInputMethodSubtype.getRawSubtype()
java.lang.String com.android.inputmethod.latin.utils.SubtypeLocaleUtils.getCombiningRulesExtraValue(android.view.inputmethod.InputMethodSubtype)
boolean com.android.internal.view.InputConnectionWrapper.requestCursorUpdates(int)
boolean com.android.internal.view.InputConnectionWrapper.isMethodMissing(int)
com.android.internal.view.InputConnectionWrapper$InputContextCallback com.android.internal.view.InputConnectionWrapper$InputContextCallback.access$000()
com.android.internal.view.InputConnectionWrapper$InputContextCallback com.android.internal.view.InputConnectionWrapper$InputContextCallback.getInstance()
void com.android.internal.view.IInputContext$Stub$Proxy.requestUpdateCursorAnchorInfo(int, int, com.android.internal.view.IInputContextCallback)
android.os.IBinder com.android.internal.view.IInputContextCallback$Stub.asBinder()
void com.android.internal.view.InputConnectionWrapper$InputContextCallback.waitForResultLocked()
void com.android.internal.view.IInputConnectionWrapper.requestUpdateCursorAnchorInfo(int, int, com.android.internal.view.IInputContextCallback)
android.os.Message com.android.internal.view.IInputConnectionWrapper.obtainMessageISC(int, int, int, com.android.internal.view.IInputContextCallback)
void com.android.internal.view.IInputConnectionWrapper.dispatchMessage(android.os.Message)
void android.view.inputmethod.InputMethodManager.setUpdateCursorAnchorInfoMode(int)
boolean android.view.View.isInLayout()
android.view.ViewRootImpl android.view.View.getViewRootImpl()
boolean android.view.ViewRootImpl.isInLayout()
void android.view.View.requestLayout()
void com.android.internal.view.IInputContextCallback$Stub$Proxy.setRequestUpdateCursorAnchorInfoResult(boolean, int)
void com.android.internal.view.InputConnectionWrapper$InputContextCallback.setRequestUpdateCursorAnchorInfoResult(boolean, int)
void com.android.internal.view.InputConnectionWrapper$InputContextCallback.access$100(com.android.internal.view.InputConnectionWrapper$InputContextCallback)
void com.android.internal.view.InputConnectionWrapper$InputContextCallback.dispose()
android.view.View androidx.recyclerview.widget.LinearLayoutManager.findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, int, int, int)
android.view.View androidx.recyclerview.widget.RecyclerView$LayoutManager.getChildAt(int)
int androidx.recyclerview.widget.RecyclerView$LayoutManager.getPosition(android.view.View)
boolean androidx.recyclerview.widget.RecyclerView$LayoutParams.isItemRemoved()
int androidx.recyclerview.widget.OrientationHelper$1.getDecoratedStart(android.view.View)
int androidx.recyclerview.widget.RecyclerView$LayoutManager.getDecoratedLeft(android.view.View)
int androidx.recyclerview.widget.RecyclerView$LayoutManager.getLeftDecorationWidth(android.view.View)
int androidx.recyclerview.widget.OrientationHelper$1.getDecoratedEnd(android.view.View)
int androidx.recyclerview.widget.RecyclerView$LayoutManager.getDecoratedRight(android.view.View)
int androidx.recyclerview.widget.RecyclerView$LayoutManager.getRightDecorationWidth(android.view.View)
int android.view.View.getLeft()
boolean androidx.recyclerview.widget.LinearLayoutManager.updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State, androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo)
int android.view.View.getRight()
void com.android.inputmethod.keyboard.MainKeyboardView.closing()
void com.android.inputmethod.keyboard.MainKeyboardView.cancelAllOngoingEvents()
void com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview.dismissSlidingKeyInputPreview()
void com.android.inputmethod.keyboard.internal.AbstractDrawingPreview.invalidateDrawingView()
void android.view.View.invalidate()
android.view.inputmethod.EditorInfo com.android.inputmethod.latin.inputlogic.InputLogic.getCurrentInputEditorInfo()
void com.android.inputmethod.keyboard.KeyboardSwitcher.loadKeyboard(android.view.inputmethod.EditorInfo, com.android.inputmethod.latin.settings.SettingsValues, int, int)
void com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder.<init>(android.content.Context, android.view.inputmethod.EditorInfo)
android.content.res.Resources android.view.ContextThemeWrapper.getResources()
int com.android.inputmethod.keyboard.KeyboardLayoutSet$Builder.getKeyboardMode(android.view.inputmethod.EditorInfo)
boolean com.android.inputmethod.compat.InputMethodSubtypeCompatUtils.isAsciiCapable(android.view.inputmethod.InputMethodSubtype)
boolean com.android.inputmethod.compat.InputMethodSubtypeCompatUtils.isAsciiCapableWithAPI(android.view.inputmethod.InputMethodSubtype)
java.lang.String com.android.inputmethod.latin.utils.SubtypeLocaleUtils.getKeyboardLayoutSetName(android.view.inputmethod.InputMethodSubtype)
boolean android.view.inputmethod.InputMethodManager.shouldOfferSwitchingToNextInputMethod(android.os.IBinder)
void com.android.inputmethod.keyboard.emoji.EmojiPalettesView.stopEmojiPalettes()
void androidx.viewpager.widget.ViewPager.setAdapter(androidx.viewpager.widget.PagerAdapter)
void com.android.inputmethod.keyboard.MainKeyboardView.setKeyboard(com.android.inputmethod.keyboard.Keyboard)
void com.android.inputmethod.keyboard.KeyboardView.setKeyboard(com.android.inputmethod.keyboard.Keyboard)
void com.android.inputmethod.keyboard.KeyboardView.invalidateAllKeys()
int android.view.View.getPaddingLeft()
int android.view.View.getPaddingTop()
float com.android.inputmethod.keyboard.KeyboardView.getVerticalCorrection()
void com.android.inputmethod.latin.InputView.setKeyboardTopPadding(int)
void com.android.inputmethod.latin.InputView$KeyboardTopPaddingForwarder.setKeyboardTopPadding(int)
void com.android.inputmethod.keyboard.MainKeyboardView.setKeyPreviewPopupEnabled(boolean, int)
void com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams.setPopupEnabled(boolean, int)
void com.android.inputmethod.keyboard.MainKeyboardView.setKeyPreviewAnimationParams(boolean, float, float, int, float, float, int)
void com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams.setAnimationParams(boolean, float, float, int, float, float, int)
void com.android.inputmethod.keyboard.MainKeyboardView.updateShortcutKey(boolean)
java.lang.String android.view.inputmethod.InputMethodSubtype.getLocale()
void com.android.inputmethod.keyboard.MainKeyboardView.startDisplayLanguageOnSpacebar(boolean, int, boolean)
void com.android.inputmethod.keyboard.KeyboardView.invalidateKey(com.android.inputmethod.keyboard.Key)
boolean com.android.inputmethod.latin.LatinIME.hasSuggestionStripView()
void com.android.inputmethod.latin.suggestions.SuggestionStripView.updateVisibility(boolean, boolean)
void com.android.inputmethod.latin.suggestions.SuggestionStripView.setSuggestions(com.android.inputmethod.latin.SuggestedWords, boolean)
void com.android.inputmethod.latin.suggestions.SuggestionStripView.clear()
void com.android.inputmethod.latin.suggestions.SuggestionStripView.removeAllDebugInfoViews()
void com.android.inputmethod.latin.suggestions.SuggestionStripView$StripVisibilityGroup.showSuggestionsStrip()
void com.android.inputmethod.latin.suggestions.SuggestionStripView.dismissMoreSuggestionsPanel()
void com.android.inputmethod.keyboard.MoreKeysKeyboardView.dismissMoreKeysPanel()
boolean com.android.inputmethod.keyboard.MoreKeysKeyboardView.isShowingInParent()
android.view.View com.android.inputmethod.keyboard.MoreKeysKeyboardView.getContainerView()
void com.android.inputmethod.latin.suggestions.SuggestionStripView$StripVisibilityGroup.setLayoutDirection(boolean)
void androidx.core.view.ViewCompat.setLayoutDirection(android.view.View, int)
void android.view.View.setLayoutDirection(int)
int com.android.inputmethod.latin.suggestions.SuggestionStripLayoutHelper.layoutAndReturnStartIndexOfMoreSuggestions(android.content.Context, com.android.inputmethod.latin.SuggestedWords, android.view.ViewGroup, android.view.ViewGroup)
int com.android.inputmethod.latin.suggestions.SuggestionStripLayoutHelper.setupWordViewsAndReturnStartIndexOfMoreSuggestions(com.android.inputmethod.latin.SuggestedWords, int)
void android.view.View.setTag(java.lang.Object)
java.lang.CharSequence android.widget.TextView.getText()
android.text.TextPaint android.widget.TextView.getPaint()
android.widget.TextView com.android.inputmethod.latin.suggestions.SuggestionStripLayoutHelper.layoutWord(android.content.Context, int, int)
void android.widget.TextView.setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable, android.graphics.drawable.Drawable)
void android.view.View.setContentDescription(java.lang.CharSequence)
float android.widget.TextView.getTextScaleX()
void android.widget.TextView.setTextScaleX(float)
void android.widget.TextView.setEnabled(boolean)
void android.view.ViewGroup.addView(android.view.View)
void com.android.inputmethod.latin.suggestions.SuggestionStripLayoutHelper.setLayoutWeight(android.view.View, float, int)
void com.android.inputmethod.latin.suggestions.SuggestionStripLayoutHelper.addDivider(android.view.ViewGroup, android.view.View)
void com.android.inputmethod.keyboard.MainKeyboardView.setGestureHandlingEnabledByUser(boolean, boolean, boolean)
void com.android.inputmethod.keyboard.MainKeyboardView.setGesturePreviewMode(boolean, boolean)
void com.android.inputmethod.keyboard.internal.AbstractDrawingPreview.setPreviewEnabled(boolean)
void com.android.inputmethod.latin.utils.StatsUtilsManager.onStartInputView()
boolean android.inputmethodservice.InputMethodService.isInputViewShown()
void android.inputmethodservice.InputMethodService$InputMethodSessionImpl.updateCursorAnchorInfo(android.view.inputmethod.CursorAnchorInfo)
void android.inputmethodservice.InputMethodService.onUpdateCursorAnchorInfo(android.view.inputmethod.CursorAnchorInfo)
android.graphics.Insets android.view.WindowInsets.getSystemWindowInsets()
int android.view.WindowInsets$Type.compatSystemInsets()
android.graphics.Insets android.view.WindowInsets.getInsets(android.graphics.Insets[], int)
void com.android.inputmethod.compat.ViewOutlineProviderCompatUtilsLXX$InsetsOutlineProvider.getOutline(android.view.View, android.graphics.Outline)
int android.view.View.getBottom()
void android.view.View.getLocationInWindow(int[])
void com.android.inputmethod.keyboard.internal.GestureFloatingTextDrawingPreview.drawPreview(android.graphics.Canvas)
void com.android.inputmethod.keyboard.internal.GestureTrailsDrawingPreview.drawPreview(android.graphics.Canvas)
void com.android.inputmethod.keyboard.internal.SlidingKeyInputDrawingPreview.drawPreview(android.graphics.Canvas)
void android.view.IPinnedStackController$Stub$Proxy.setMinEdgeSize(int)
android.view.View androidx.recyclerview.widget.RecyclerView$LayoutManager.getFocusedChild()
android.view.View android.view.ViewGroup.getFocusedChild()
android.view.View androidx.recyclerview.widget.LinearLayoutManager.findReferenceChildClosestToStart(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State)
android.view.View androidx.recyclerview.widget.LinearLayoutManager.findFirstReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State)
int androidx.recyclerview.widget.RecyclerView$State.getItemCount()
void androidx.recyclerview.widget.LinearLayoutManager.ensureLayoutState()
void androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo.assignFromView(android.view.View, int)
boolean androidx.recyclerview.widget.RecyclerView$State.isPreLayout()
boolean androidx.recyclerview.widget.LinearLayoutManager.supportsPredictiveItemAnimations()
void androidx.viewpager.widget.PagerAdapter.startUpdate(android.view.ViewGroup)
void androidx.viewpager.widget.PagerAdapter.startUpdate(android.view.View)
void androidx.viewpager.widget.PagerAdapter.setPrimaryItem(android.view.ViewGroup, int, java.lang.Object)
void androidx.viewpager.widget.PagerAdapter.setPrimaryItem(android.view.View, int, java.lang.Object)
void androidx.viewpager.widget.PagerAdapter.finishUpdate(android.view.ViewGroup)
void androidx.viewpager.widget.PagerAdapter.finishUpdate(android.view.View)
android.view.View androidx.recyclerview.widget.LinearLayoutManager.findLastReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State)
int androidx.recyclerview.widget.OrientationHelper$2.getDecoratedStart(android.view.View)
int androidx.recyclerview.widget.OrientationHelper$2.getDecoratedEnd(android.view.View)
com.jd.lib.mylive.view.utils.k com.jd.lib.mylive.view.utils.k.d()
kotlin.Lazy com.jd.lib.mylive.view.utils.k.a()
com.jd.lib.mylive.view.widget.y1 com.jd.lib.mylive.view.utils.k.c(java.lang.String)
int androidx.recyclerview.widget.LinearLayoutManager.scrollBy(int, androidx.recyclerview.widget.RecyclerView$Recycler, androidx.recyclerview.widget.RecyclerView$State)
void tv.danmaku.ijk.media.example.widget.media.TextureRenderView.onMeasure(int, int)
int android.view.View.getDefaultSize(int, int)
int android.view.View$MeasureSpec.getMode(int)
int android.view.View$MeasureSpec.getSize(int)
void android.view.View.setMeasuredDimension(int, int)
java.lang.CharSequence com.android.internal.view.InputConnectionWrapper.getTextAfterCursor(int, int)
void com.jd.lib.mylive.view.widget.y1.draw(android.graphics.Canvas, java.lang.CharSequence, int, int, float, int, int, int, android.graphics.Paint)
void androidx.viewpager.widget.ViewPager.completeScroll(boolean)
void com.jingdong.common.widget.video.IjkVideoViewWithReport$MyHandler.handleMessage(android.os.Message)
com.jingdong.common.widget.video.IjkVideoViewWithReport$MyHandler com.jingdong.common.widget.video.IjkVideoViewWithReport.access$400(com.jingdong.common.widget.video.IjkVideoViewWithReport)
long tv.danmaku.ijk.media.example.widget.media.IjkVideoView.getTcpSpeed()
tv.danmaku.ijk.media.player.IjkMediaPlayer tv.danmaku.ijk.media.example.widget.media.IjkVideoView.getIjkMediaPlayer()
void com.jingdong.common.widget.video.IjkVideoViewWithReport.access$600(com.jingdong.common.widget.video.IjkVideoViewWithReport, long)
void com.jingdong.common.widget.video.IjkVideoViewWithReport.addVideoSpeed(long)
void com.jd.lib.mylive.view.widget.LiveSkinView.H(java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean, boolean, int, int)
void com.jd.lib.mylive.view.widget.LiveSkinView.N(com.jd.lib.mylive.model.entity.CommentEntity)
java.util.List com.jd.lib.mylive.view.utils.LiveMessageRecyclerHelper.g()
void com.jd.lib.mylive.view.utils.LiveMessageRecyclerHelper.d(java.lang.Object)
void com.jd.lib.mylive.view.utils.LiveMessageRecyclerHelper$a.handleMessage(android.os.Message)
int com.jd.lib.mylive.view.utils.LiveMessageRecyclerHelper.a(com.jd.lib.mylive.view.utils.LiveMessageRecyclerHelper)
void com.jd.lib.mylive.view.utils.LiveMessageRecyclerHelper.b(com.jd.lib.mylive.view.utils.LiveMessageRecyclerHelper)
void androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver.onItemRangeInserted(int, int)
void androidx.recyclerview.widget.RecyclerView.assertNotInLayoutOrScroll(java.lang.String)
boolean androidx.recyclerview.widget.RecyclerView.isComputingLayout()
boolean androidx.recyclerview.widget.AdapterHelper.onItemRangeInserted(int, int)
androidx.recyclerview.widget.AdapterHelper$UpdateOp androidx.recyclerview.widget.AdapterHelper.obtainUpdateOp(int, int, int, java.lang.Object)
void androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver.triggerUpdateProcessor()
void androidx.recyclerview.widget.LinearLayoutManager.scrollToPosition(int)
void androidx.recyclerview.widget.AdapterHelper.postponeAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
void androidx.recyclerview.widget.RecyclerView$6.offsetPositionsForAdd(int, int)
void androidx.recyclerview.widget.RecyclerView.offsetPositionRecordsForInsert(int, int)
void androidx.recyclerview.widget.RecyclerView$6.dispatchUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp)
void androidx.recyclerview.widget.RecyclerView$LayoutManager.onItemsAdded(androidx.recyclerview.widget.RecyclerView, int, int)
void androidx.recyclerview.widget.RecyclerView$4.processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder, androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo, androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
void androidx.recyclerview.widget.RecyclerView$ViewHolder.setIsRecyclable(boolean)
boolean androidx.recyclerview.widget.SimpleItemAnimator.animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder, androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo, androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
boolean androidx.recyclerview.widget.DefaultItemAnimator.animateMove(androidx.recyclerview.widget.RecyclerView$ViewHolder, int, int, int, int)
void androidx.recyclerview.widget.RecyclerView.postAnimationRunner()
void androidx.core.view.ViewCompat.postOnAnimation(android.view.View, java.lang.Runnable)
void android.view.View.postOnAnimation(java.lang.Runnable)
boolean androidx.recyclerview.widget.DefaultItemAnimator.animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder)
void androidx.recyclerview.widget.DefaultItemAnimator.resetAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder)
void android.view.View.setAlpha(float)
void androidx.recyclerview.widget.RecyclerView.addAnimatingView(androidx.recyclerview.widget.RecyclerView$ViewHolder)
androidx.recyclerview.widget.RecyclerView$ViewHolder androidx.recyclerview.widget.RecyclerView.getChildViewHolder(android.view.View)
void androidx.recyclerview.widget.RecyclerView$Recycler.unscrapView(androidx.recyclerview.widget.RecyclerView$ViewHolder)
boolean androidx.recyclerview.widget.RecyclerView$ViewHolder.isTmpDetached()
void androidx.recyclerview.widget.ChildHelper.hide(android.view.View)
int androidx.recyclerview.widget.RecyclerView$5.indexOfChild(android.view.View)
void androidx.recyclerview.widget.ChildHelper$Bucket.set(int)
void androidx.recyclerview.widget.ChildHelper.hideViewInternal(android.view.View)
void androidx.recyclerview.widget.RecyclerView$5.onEnteredHiddenState(android.view.View)
androidx.recyclerview.widget.RecyclerView$ViewHolder androidx.recyclerview.widget.RecyclerView.getChildViewHolderInt(android.view.View)
void androidx.recyclerview.widget.RecyclerView$ViewHolder.onEnteredHiddenState(androidx.recyclerview.widget.RecyclerView)
int androidx.core.view.ViewCompat.getImportantForAccessibility(android.view.View)
int android.view.View.getImportantForAccessibility()
boolean androidx.recyclerview.widget.RecyclerView.setChildImportantForAccessibilityInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder, int)
boolean androidx.recyclerview.widget.SimpleItemAnimator.animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder, androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo, androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo)
boolean androidx.recyclerview.widget.RecyclerView$ViewHolder.isRemoved()
void android.view.ViewGroup.layout(int, int, int, int)
void androidx.recyclerview.widget.RecyclerView$2.run()
void androidx.recyclerview.widget.DefaultItemAnimator.runPendingAnimations()
void androidx.recyclerview.widget.DefaultItemAnimator$6.onAnimationStart(android.animation.Animator)
void androidx.recyclerview.widget.SimpleItemAnimator.dispatchMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
void androidx.recyclerview.widget.SimpleItemAnimator.onMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
void com.jd.lib.mylive.view.widget.LiveSkinView.K(int)
void com.jd.lib.mylive.view.utils.z.p(int)
void com.jd.lib.mylive.view.utils.z.o(java.lang.String)
void androidx.recyclerview.widget.DefaultItemAnimator.animateAddImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder)
android.view.ViewPropertyAnimator android.view.View.animate()
android.view.ViewPropertyAnimator android.view.ViewPropertyAnimator.alpha(float)
long androidx.recyclerview.widget.RecyclerView$ItemAnimator.getAddDuration()
android.view.ViewPropertyAnimator android.view.ViewPropertyAnimator.setDuration(long)
void androidx.recyclerview.widget.DefaultItemAnimator$5.<init>(androidx.recyclerview.widget.DefaultItemAnimator, androidx.recyclerview.widget.RecyclerView$ViewHolder, android.view.View, android.view.ViewPropertyAnimator)
android.view.ViewPropertyAnimator android.view.ViewPropertyAnimator.setListener(android.animation.Animator$AnimatorListener)
void android.view.ViewPropertyAnimator.start()
void androidx.recyclerview.widget.DefaultItemAnimator$5.onAnimationStart(android.animation.Animator)
void androidx.recyclerview.widget.SimpleItemAnimator.dispatchAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
void androidx.recyclerview.widget.SimpleItemAnimator.onAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder)
void androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener.onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
boolean androidx.recyclerview.widget.RecyclerView$ViewHolder.shouldBeKeptAsChild()
boolean androidx.recyclerview.widget.RecyclerView.removeAnimatingView(android.view.View)
boolean androidx.recyclerview.widget.ChildHelper.removeViewIfHidden(android.view.View)
boolean androidx.recyclerview.widget.ChildHelper$Bucket.get(int)
boolean androidx.recyclerview.widget.ChildHelper$Bucket.remove(int)
boolean androidx.recyclerview.widget.ChildHelper.unhideViewInternal(android.view.View)
void androidx.recyclerview.widget.RecyclerView$5.onLeftHiddenState(android.view.View)
void androidx.recyclerview.widget.RecyclerView$ViewHolder.onLeftHiddenState(androidx.recyclerview.widget.RecyclerView)
void androidx.core.view.ViewCompat.setImportantForAccessibility(android.view.View, int)
void android.view.View.setImportantForAccessibility(int)
void androidx.recyclerview.widget.RecyclerView$5.removeViewAt(int)
void androidx.viewpager.widget.ViewPager.setCurrentItem(int)
void androidx.viewpager.widget.ViewPager.setCurrentItemInternal(int, boolean, boolean)
void androidx.viewpager.widget.ViewPager.setCurrentItemInternal(int, boolean, boolean, int)
int com.jd.lib.mylive.view.adapter.JDAutoImagerAdapter.getCount()
void androidx.viewpager.widget.ViewPager.populate(int)
void com.jd.lib.mylive.view.adapter.JDAutoImagerAdapter.destroyItem(android.view.ViewGroup, int, java.lang.Object)
void androidx.viewpager.widget.ViewPager.removeView(android.view.View)
androidx.viewpager.widget.ViewPager$ItemInfo androidx.viewpager.widget.ViewPager.addNewItem(int, int)
void androidx.viewpager.widget.ViewPager$ItemInfo.<init>()
java.lang.Object com.jd.lib.mylive.view.adapter.JDAutoImagerAdapter.instantiateItem(android.view.ViewGroup, int)
android.view.View android.view.LayoutInflater.inflate(int, android.view.ViewGroup, boolean)
void com.jd.lib.mylive.view.widget.GoodSimpleDraweeView.<init>(android.content.Context, android.util.AttributeSet)
void com.facebook.drawee.view.SimpleDraweeView.<init>(android.content.Context, android.util.AttributeSet)
void com.jd.lib.mylive.view.widget.GoodSimpleDraweeView.init(android.content.Context, android.util.AttributeSet)
void android.view.View.setDrawingCacheEnabled(boolean)
void android.view.View.setFlags(int, int)
void android.view.View.setWillNotDraw(boolean)
void com.jingdong.common.utils.JDImageUtils.displayImage(java.lang.String, android.widget.ImageView, com.jingdong.app.util.image.JDDisplayImageOptions)
android.view.ViewGroup$LayoutParams androidx.viewpager.widget.ViewPager.generateDefaultLayoutParams()
void androidx.viewpager.widget.ViewPager$LayoutParams.<init>()
void android.view.ViewGroup$LayoutParams.<init>(int, int)
void androidx.viewpager.widget.ViewPager.addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
boolean androidx.viewpager.widget.ViewPager.checkLayoutParams(android.view.ViewGroup$LayoutParams)
boolean android.view.ViewGroup.checkLayoutParams(android.view.ViewGroup$LayoutParams)
boolean androidx.viewpager.widget.ViewPager.isDecorView(android.view.View)
void android.view.ViewGroup.addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
void com.jd.lib.mylive.view.adapter.JDAutoImagerAdapter$a.<init>(com.jd.lib.mylive.view.adapter.JDAutoImagerAdapter, com.jd.lib.mylive.model.entity.NewLiveLotteryEntity$Lotterys)
float androidx.viewpager.widget.PagerAdapter.getPageWidth(int)
void androidx.viewpager.widget.ViewPager.scrollToItem(int, boolean, int, boolean)
androidx.viewpager.widget.ViewPager$ItemInfo androidx.viewpager.widget.ViewPager.infoForPosition(int)
int androidx.viewpager.widget.ViewPager.getClientWidth()
void androidx.viewpager.widget.ViewPager.smoothScrollTo(int, int, int)
int android.view.ViewGroup.getChildCount()
int android.view.View.getScrollX()
int android.view.View.getScrollY()
void androidx.viewpager.widget.ViewPager.setScrollingCacheEnabled(boolean)
void androidx.viewpager.widget.ViewPager.setScrollState(int)
void androidx.viewpager.widget.ViewPager.dispatchOnScrollStateChanged(int)
void com.jd.lib.mylive.view.widget.w.onPageScrollStateChanged(int)
float androidx.viewpager.widget.ViewPager.distanceInfluenceForSnapDuration(float)
void com.jd.lib.mylive.view.utils.i.startScroll(int, int, int, int, int)
long android.view.animation.AnimationUtils.currentAnimationTimeMillis()
void androidx.core.view.ViewCompat.postInvalidateOnAnimation(android.view.View)
void android.view.View.postInvalidateOnAnimation()
void androidx.viewpager.widget.ViewPager.dispatchOnPageSelected(int)
void com.jd.lib.mylive.view.widget.w.onPageSelected(int)
void com.jd.lib.mylive.view.widget.GoodSimpleDraweeView.onSizeChanged(int, int, int, int)
com.facebook.imagepipeline.animated.base.AnimatedImageResultBuilder com.facebook.imagepipeline.animated.base.AnimatedImageResultBuilder.setPreviewBitmap(com.facebook.common.references.CloseableReference)
com.facebook.imagepipeline.animated.base.AnimatedImageResultBuilder com.facebook.imagepipeline.animated.base.AnimatedImageResultBuilder.setFrameForPreview(int)
int com.facebook.imagepipeline.animated.base.AnimatedImageResultBuilder.getFrameForPreview()
com.facebook.common.references.CloseableReference com.facebook.imagepipeline.animated.base.AnimatedImageResultBuilder.getPreviewBitmap()
void androidx.viewpager.widget.ViewPager.dispatchOnPageScrolled(int, float, int)
void com.jd.lib.mylive.view.widget.w.onPageScrolled(int, float, int)
void androidx.recyclerview.widget.DefaultItemAnimator$5.onAnimationCancel(android.animation.Animator)
void androidx.recyclerview.widget.DefaultItemAnimator$5.onAnimationEnd(android.animation.Animator)
void androidx.recyclerview.widget.SimpleItemAnimator.dispatchAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
void androidx.recyclerview.widget.SimpleItemAnimator.onAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
void androidx.recyclerview.widget.RecyclerView$ItemAnimator.dispatchAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
void androidx.recyclerview.widget.RecyclerView$ItemAnimator.onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder)
void androidx.recyclerview.widget.DefaultItemAnimator.dispatchFinishedWhenDone()
void com.jd.lib.mylive.view.utils.LiveMessageRecyclerHelper$setRecyclerView$1.onScrolled(androidx.recyclerview.widget.RecyclerView, int, int)
boolean com.android.inputmethod.latin.InputView$KeyboardTopPaddingForwarder.needsToForward(int, int)
boolean com.android.inputmethod.latin.InputView$KeyboardTopPaddingForwarder.isInKeyboardTopPadding(int)
boolean com.android.inputmethod.latin.InputView$MoreSuggestionsViewCanceler.needsToForward(int, int)
boolean com.android.inputmethod.latin.suggestions.SuggestionStripView.isShowingMoreSuggestionPanel()
boolean com.android.inputmethod.keyboard.MainKeyboardView.onTouchEvent(android.view.MotionEvent)
boolean com.android.inputmethod.keyboard.MainKeyboardView.processMotionEvent(android.view.MotionEvent)
void com.android.inputmethod.keyboard.MainKeyboardView.showSlidingKeyInputPreview(com.android.inputmethod.keyboard.PointerTracker)
void com.android.inputmethod.keyboard.MainKeyboardView.locatePreviewPlacerView()
void com.android.inputmethod.keyboard.MainKeyboardView.cancelDoubleTapShiftKeyTimer()
boolean com.android.inputmethod.keyboard.MainKeyboardView.isInDraggingFinger()
boolean com.android.inputmethod.keyboard.MainKeyboardView.isShowingMoreKeysPanel()
void com.android.inputmethod.latin.AudioAndHapticFeedbackManager.performHapticFeedback(android.view.View)
boolean android.view.View.performHapticFeedback(int, int)
boolean com.android.inputmethod.keyboard.PointerTracker.needsToSuppressKeyPreviewPopup(long)
void com.android.inputmethod.keyboard.MainKeyboardView.onKeyPressed(com.android.inputmethod.keyboard.Key, boolean)
boolean com.android.inputmethod.keyboard.Key.noKeyPreview()
void com.android.inputmethod.keyboard.MainKeyboardView.onKeyReleased(com.android.inputmethod.keyboard.Key, boolean)
int com.android.inputmethod.keyboard.MainKeyboardView.getKeyX(int)
int com.android.inputmethod.keyboard.MainKeyboardView.getKeyY(int)
boolean com.android.internal.view.InputConnectionWrapper.beginBatchEdit()
void com.android.internal.view.IInputContext$Stub$Proxy.beginBatchEdit()
boolean com.android.internal.view.InputConnectionWrapper.endBatchEdit()
void com.android.internal.view.IInputContext$Stub$Proxy.endBatchEdit()
void androidx.viewpager.widget.ViewPager$3.run()
void androidx.viewpager.widget.ViewPager.populate()
void com.android.inputmethod.keyboard.MainKeyboardView.startWhileTypingAnimation(int)
void com.android.inputmethod.keyboard.MainKeyboardView.cancelAndStartAnimators(android.animation.ObjectAnimator, android.animation.ObjectAnimator)
void com.android.inputmethod.keyboard.MainKeyboardView.showKeyPreview(com.android.inputmethod.keyboard.Key)
boolean com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams.isPopupEnabled()
com.android.inputmethod.keyboard.internal.KeyDrawParams com.android.inputmethod.keyboard.KeyboardView.getKeyDrawParams()
boolean android.view.View.isHardwareAccelerated()
void com.android.inputmethod.keyboard.internal.KeyPreviewChoreographer.placeAndShowKeyPreview(com.android.inputmethod.keyboard.Key, com.android.inputmethod.keyboard.internal.KeyboardIconsSet, com.android.inputmethod.keyboard.internal.KeyDrawParams, int, int[], android.view.ViewGroup, boolean)
com.android.inputmethod.keyboard.internal.KeyPreviewView com.android.inputmethod.keyboard.internal.KeyPreviewChoreographer.getKeyPreviewView(com.android.inputmethod.keyboard.Key, android.view.ViewGroup)
void com.android.inputmethod.keyboard.internal.KeyPreviewView.<init>(android.content.Context, android.util.AttributeSet)
void com.android.inputmethod.keyboard.internal.KeyPreviewView.<init>(android.content.Context, android.util.AttributeSet, int)
void android.widget.TextView.<init>(android.content.Context, android.util.AttributeSet, int)
void android.widget.TextView.setGravity(int)
android.view.ViewGroup$MarginLayoutParams com.android.inputmethod.latin.utils.ViewLayoutUtils.newLayoutParam(android.view.ViewGroup, int, int)
void com.android.inputmethod.keyboard.internal.KeyPreviewChoreographer.placeKeyPreview(com.android.inputmethod.keyboard.Key, com.android.inputmethod.keyboard.internal.KeyPreviewView, com.android.inputmethod.keyboard.internal.KeyboardIconsSet, com.android.inputmethod.keyboard.internal.KeyDrawParams, int, int[])
android.graphics.Typeface com.android.inputmethod.keyboard.Key.selectPreviewTypeface(com.android.inputmethod.keyboard.internal.KeyDrawParams)
boolean com.android.inputmethod.keyboard.Key.previewHasLetterSize()
java.lang.String com.android.inputmethod.keyboard.Key.getPreviewLabel()
void com.android.inputmethod.keyboard.internal.KeyPreviewView.setPreviewBackground(boolean, int)
void com.android.inputmethod.keyboard.internal.KeyPreviewChoreographer.showKeyPreview(com.android.inputmethod.keyboard.Key, com.android.inputmethod.keyboard.internal.KeyPreviewView, boolean)
android.animation.Animator com.android.inputmethod.keyboard.internal.KeyPreviewChoreographer.createShowUpAnimator(com.android.inputmethod.keyboard.Key, com.android.inputmethod.keyboard.internal.KeyPreviewView)
android.animation.Animator com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams.createShowUpAnimator(android.view.View)
void com.android.inputmethod.keyboard.internal.KeyPreviewChoreographer$1.<init>(com.android.inputmethod.keyboard.internal.KeyPreviewChoreographer, com.android.inputmethod.keyboard.Key, com.android.inputmethod.keyboard.internal.KeyPreviewView)
android.animation.Animator com.android.inputmethod.keyboard.internal.KeyPreviewChoreographer.createDismissAnimator(com.android.inputmethod.keyboard.Key, com.android.inputmethod.keyboard.internal.KeyPreviewView)
android.animation.Animator com.android.inputmethod.keyboard.internal.KeyPreviewDrawParams.createDismissAnimator(android.view.View)
void com.android.inputmethod.keyboard.internal.KeyPreviewChoreographer$2.<init>(com.android.inputmethod.keyboard.internal.KeyPreviewChoreographer, com.android.inputmethod.keyboard.Key)
void com.android.inputmethod.keyboard.internal.KeyPreviewChoreographer$KeyPreviewAnimators.<init>(android.animation.Animator, android.animation.Animator)
void com.android.inputmethod.keyboard.internal.KeyPreviewChoreographer$KeyPreviewAnimators.startShowUp()
void com.android.inputmethod.keyboard.internal.KeyPreviewChoreographer$1.onAnimationStart(android.animation.Animator)
void androidx.recyclerview.widget.RecyclerView$ItemAnimator.dispatchAnimationsFinished()
void com.android.inputmethod.keyboard.MainKeyboardView.dismissKeyPreview(com.android.inputmethod.keyboard.Key)
void com.android.inputmethod.keyboard.internal.KeyPreviewChoreographer.dismissKeyPreview(com.android.inputmethod.keyboard.Key, boolean)
void com.android.inputmethod.keyboard.internal.KeyPreviewChoreographer$KeyPreviewAnimators.startDismiss()
void android.view.KeyEvent.<init>(long, long, int, int, int, int, int, int, int)
void com.android.inputmethod.latin.RichInputConnection.sendKeyEvent(android.view.KeyEvent)
int android.view.KeyEvent.getAction()
int android.view.KeyEvent.getKeyCode()
int android.view.KeyEvent.getUnicodeChar()
boolean com.android.internal.view.InputConnectionWrapper.sendKeyEvent(android.view.KeyEvent)
void com.android.internal.view.IInputContext$Stub$Proxy.sendKeyEvent(android.view.KeyEvent)
void com.android.internal.view.InputConnectionWrapper.notifyUserActionIfNecessary()
void com.android.internal.view.IInputConnectionWrapper.sendKeyEvent(android.view.KeyEvent)
android.os.Message com.android.internal.view.IInputConnectionWrapper.obtainMessageO(int, java.lang.Object)
boolean android.view.inputmethod.BaseInputConnection.sendKeyEvent(android.view.KeyEvent)
void android.view.inputmethod.InputMethodManager.dispatchKeyEventFromInputMethod(android.view.View, android.view.KeyEvent)
android.view.inputmethod.InputMethodManager android.view.inputmethod.InputMethodManager.getFallbackInputMethodManagerIfNecessary(android.view.View)
void android.view.ViewRootImpl.dispatchKeyFromIme(android.view.KeyEvent)
boolean android.widget.PopupWindow$PopupDecorView.dispatchKeyEvent(android.view.KeyEvent)
boolean android.view.ViewGroup.dispatchKeyEvent(android.view.KeyEvent)
boolean android.widget.TextView.onKeyDown(int, android.view.KeyEvent)
int android.widget.TextView.doKeyDown(int, android.view.KeyEvent, android.view.KeyEvent)
boolean android.view.View.isEnabled()
int android.view.KeyEvent.getRepeatCount()
boolean android.view.KeyEvent.isModifierKey(int)
void android.widget.TextView.beginBatchEdit()
boolean android.text.method.TextKeyListener.onKeyDown(android.view.View, android.text.Editable, int, android.view.KeyEvent)
android.text.method.KeyListener android.text.method.TextKeyListener.getKeyListener(android.view.KeyEvent)
android.view.KeyCharacterMap android.view.KeyEvent.getKeyCharacterMap()
int android.view.KeyCharacterMap.getKeyboardType()
boolean android.text.method.QwertyKeyListener.onKeyDown(android.view.View, android.text.Editable, int, android.view.KeyEvent)
int android.text.method.MetaKeyKeyListener.getMetaState(java.lang.CharSequence, android.view.KeyEvent)
int android.view.KeyEvent.getMetaState()
int android.view.KeyCharacterMap.getModifierBehavior()
int android.view.KeyEvent.getUnicodeChar(int)
void com.jd.lib.mylive.view.widget.e1.afterTextChanged(android.text.Editable)
android.widget.EditText com.jd.lib.mylive.view.widget.c1.a(com.jd.lib.mylive.view.widget.c1)
void android.widget.TextView.endBatchEdit()
void android.widget.TextView.hideErrorIfUnchanged()
boolean android.widget.TextView.onKeyUp(int, android.view.KeyEvent)
boolean android.text.method.TextKeyListener.onKeyUp(android.view.View, android.text.Editable, int, android.view.KeyEvent)
boolean android.text.method.MetaKeyKeyListener.onKeyUp(android.view.View, android.text.Editable, int, android.view.KeyEvent)
boolean android.text.method.BaseMovementMethod.onKeyUp(android.widget.TextView, android.text.Spannable, int, android.view.KeyEvent)
boolean android.view.View.onKeyUp(int, android.view.KeyEvent)
boolean com.android.internal.policy.PhoneFallbackEventHandler.dispatchKeyEvent(android.view.KeyEvent)
boolean com.android.internal.policy.PhoneFallbackEventHandler.onKeyUp(int, android.view.KeyEvent)
android.view.KeyEvent$DispatcherState android.view.View.getKeyDispatcherState()
void android.view.KeyEvent$DispatcherState.handleUpEvent(android.view.KeyEvent)
void com.android.inputmethod.keyboard.internal.KeyPreviewChoreographer$2.onAnimationEnd(android.animation.Animator)
void com.jd.lib.mylive.view.widget.DragFloatView$b.e()
void com.jd.lib.mylive.view.widget.DragFloatView.l(long)
com.jd.lib.mylive.help.j com.jd.lib.mylive.view.widget.DragFloatView.a(com.jd.lib.mylive.view.widget.DragFloatView)
com.jd.lib.mylive.help.j com.jd.lib.mylive.view.widget.DragFloatView.b(com.jd.lib.mylive.view.widget.DragFloatView, com.jd.lib.mylive.help.j)
long com.jd.lib.mylive.view.widget.DragFloatView.e(com.jd.lib.mylive.view.widget.DragFloatView)
boolean android.widget.PopupWindow$PopupDecorView.dispatchTouchEvent(android.view.MotionEvent)
android.view.View$OnTouchListener android.widget.PopupWindow.access$300(android.widget.PopupWindow)
void com.jd.lib.mylive.view.widget.c1$a.onClick(android.view.View)
void com.jd.lib.mylive.view.widget.c1.c(int, com.jd.lib.mylive.model.entity.VideoPWGoodsEntity)
void com.jd.lib.mylive.view.widget.a.<init>(com.jd.lib.mylive.view.widget.c1, int, com.jd.lib.mylive.model.entity.VideoPWGoodsEntity)
android.view.ViewGroup com.jingdong.common.BaseActivity.getSubRootView()
void com.jingdong.jdsdk.network.toolbox.HttpGroupSetting.setProgressBarRootLayout(android.view.ViewGroup)
void com.jd.lib.mylive.view.widget.a.a(boolean)
void com.jd.lib.mylive.view.widget.c1.e(int, com.jd.lib.mylive.model.entity.VideoPWGoodsEntity, boolean)
void android.inputmethodservice.InputMethodService$InputMethodImpl.restartInput(android.view.inputmethod.InputConnection, android.view.inputmethod.EditorInfo)
void android.inputmethodservice.InputMethodService.doStartInput(android.view.inputmethod.InputConnection, android.view.inputmethod.EditorInfo, boolean)
void com.jd.lib.mylive.view.widget.LiveSkinView.O(java.lang.String, java.lang.String)
void com.jd.lib.mylive.view.widget.c1.d()
void android.widget.PopupWindow$PopupDecorView.cancelTransitions()
void androidx.recyclerview.widget.RecyclerView.onDetachedFromWindow()
void android.view.ViewGroup.onDetachedFromWindow()
void androidx.recyclerview.widget.RecyclerView$LayoutManager.stopSmoothScroller()
void androidx.recyclerview.widget.RecyclerView$LayoutManager.dispatchDetachedFromWindow(androidx.recyclerview.widget.RecyclerView, androidx.recyclerview.widget.RecyclerView$Recycler)
void androidx.recyclerview.widget.LinearLayoutManager.onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView, androidx.recyclerview.widget.RecyclerView$Recycler)
void androidx.recyclerview.widget.RecyclerView$LayoutManager.onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView, androidx.recyclerview.widget.RecyclerView$Recycler)
void androidx.recyclerview.widget.RecyclerView$LayoutManager.onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView)
void androidx.recyclerview.widget.ViewInfoStore.onDetach()
void androidx.recyclerview.widget.ViewInfoStore$InfoRecord.drainCache()
void androidx.recyclerview.widget.GapWorker.remove(androidx.recyclerview.widget.RecyclerView)
void androidx.recyclerview.widget.RecyclerView.stopNestedScroll()
androidx.core.view.NestedScrollingChildHelper androidx.recyclerview.widget.RecyclerView.getScrollingChildHelper()
void androidx.core.view.NestedScrollingChildHelper.stopNestedScroll()
void androidx.core.view.NestedScrollingChildHelper.stopNestedScroll(int)
android.view.ViewParent androidx.core.view.NestedScrollingChildHelper.getNestedScrollingParentForType(int)
void android.view.ViewRootImpl.destroySurface()
void android.view.Surface.release()
void android.view.SurfaceControl.release()
void com.android.inputmethod.keyboard.MainKeyboardView.setMainDictionaryAvailability(boolean)
void com.android.inputmethod.keyboard.MainKeyboardView.setSlidingKeyInputPreviewEnabled(boolean)
void com.android.inputmethod.keyboard.MainKeyboardView.onHideWindow()
void com.android.inputmethod.keyboard.MainKeyboardView.onDismissMoreKeysPanel()
void com.android.inputmethod.latin.LatinIME.onFinishInputView(boolean)
void com.android.inputmethod.latin.LatinIME$UIHandler.onFinishInputView(boolean)
void com.android.systemui.statusbar.phone.NavigationBarView$NavTransitionListener.onBackAltCleared()
com.android.systemui.statusbar.phone.ButtonDispatcher com.android.systemui.statusbar.phone.NavigationBarView.getBackButton()
void com.android.inputmethod.latin.LatinIME.onFinishInputViewInternal(boolean)
void android.inputmethodservice.InputMethodService.onFinishInputView(boolean)
void com.android.inputmethod.latin.utils.StatsUtilsManager.onFinishInputView()
boolean android.view.View.isLayoutRequested()
void androidx.recyclerview.widget.ChildHelper.unhide(android.view.View)
void androidx.recyclerview.widget.ChildHelper$Bucket.clear(int)
int androidx.recyclerview.widget.ChildHelper.indexOfChild(android.view.View)
int androidx.recyclerview.widget.ChildHelper$Bucket.countOnesBefore(int)
void androidx.recyclerview.widget.DefaultItemAnimator$6.onAnimationCancel(android.animation.Animator)
void android.view.View.setTranslationY(float)
boolean com.android.internal.view.InputConnectionWrapper.setComposingText(java.lang.CharSequence, int)
void com.android.internal.view.IInputContext$Stub$Proxy.setComposingText(java.lang.CharSequence, int)
void com.android.internal.view.IInputConnectionWrapper.setComposingText(java.lang.CharSequence, int)
android.os.Message com.android.internal.view.IInputConnectionWrapper.obtainMessageIO(int, int, java.lang.Object)
boolean android.view.inputmethod.BaseInputConnection.setComposingText(java.lang.CharSequence, int)
void android.view.inputmethod.BaseInputConnection.replaceText(java.lang.CharSequence, int, boolean)
void android.view.inputmethod.BaseInputConnection.ensureDefaultComposingSpans()
void android.view.inputmethod.BaseInputConnection.setComposingSpans(android.text.Spannable, int, int)
void android.widget.TextView.populateCharacterBounds(android.view.inputmethod.CursorAnchorInfo$Builder, int, int, float, float)
boolean android.widget.TextView.isPositionVisible(float, float)
android.view.inputmethod.CursorAnchorInfo$Builder android.view.inputmethod.CursorAnchorInfo$Builder.addCharacterBounds(int, float, float, float, float, int)
void android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder.<init>()
android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder.append(int, float, float, float, float, int)
void android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder.checkIndex(int)
void android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder.ensureBufferSize()
void android.view.inputmethod.SparseRectFArray.<clinit>()
void android.view.inputmethod.SparseRectFArray$1.<init>()
android.view.inputmethod.SparseRectFArray android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder.build()
void android.view.inputmethod.SparseRectFArray.<init>(android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder, android.view.inputmethod.SparseRectFArray$1)
void android.view.inputmethod.SparseRectFArray.<init>(android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder)
int android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder.access$100(android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder)
int[] android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder.access$200(android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder)
float[] android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder.access$300(android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder)
int[] android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder.access$400(android.view.inputmethod.SparseRectFArray$SparseRectFArrayBuilder)
void android.view.inputmethod.SparseRectFArray.writeToParcel(android.os.Parcel, int)
java.lang.Object android.view.inputmethod.SparseRectFArray$1.createFromParcel(android.os.Parcel)
android.view.inputmethod.SparseRectFArray android.view.inputmethod.SparseRectFArray$1.createFromParcel(android.os.Parcel)
void android.view.inputmethod.SparseRectFArray.<init>(android.os.Parcel)
boolean android.view.inputmethod.SparseRectFArray.equals(java.lang.Object)